@model Asp.NETMVCCRUD.Models.Employee

@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Employee", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EmployeeID)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @type = "text", @required = "required" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Position, new { @class = "control-label" })
        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control", @type = "text", @required = "required" } })
        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Office, new { @class = "control-label" })
        @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control", @type = "text", @required = "required" } })
        @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, new { @class = "control-label" })
        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @type = "number", min = "1", @required = "required" } })
        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Salary, new { @class = "control-label" })
        <div class="input-group">
            <span class="input-group-addon">$</span>
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @type = "number", min = "0" } })
        </div>
        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" class="btn btn-success" />
        <input type="reset" value="Reset" class="btn" />
    </div>

    <div id="wait" style="display:none; width:69px; height:89px; position:absolute; top:199px; left:299px; padding:2px;">
        <img src="~/Content/gif/demo_wait.gif" width="64" height="64" /><br>
    </div>
}